# (C) Copyright 2017 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

require_relative '../_client' # Gives access to @client

# All supported APIs for Event:
# - API200 for C7000 and Synergy
# - API300 for C7000 and Synergy

# Resources classes that you can use for Event in this example:
# event_class = OneviewSDK::API200::Event
# event_class = OneviewSDK::API300::C7000::Event
# event_class = OneviewSDK::API300::Synergy::Event
alert_class = OneviewSDK.resource_named('Alerts', @client.api_version)


puts "\n\n Get all alerts:"
alert_class.get_all(@client).each do |item|
  puts item.data
end

all = alert_class.get_all(@client)
puts "\n\n Printing URI "
alert = alert_class.get_all(@client).first
puts alert[:uri]
puts "\n alert to be deleted by ID \n"
puts alert
alert_id = alert_class.find_by(@client, uri: alert[:uri])[0]
puts "Alerts by ID : '#{alert_id.data}'"

# Updating the assignedToUser
puts "\n Update an Alert"
attribute = { assignedToUser: 'Paul' }
puts attribute
alert.update(attribute)
sleep(10)
puts "\n Updated Alert:"
puts '#{alert.data}'

puts "\n\n Delete Alert by ID"
alert.delete
#puts "After Delete"
#after_delete = alert_class.find_by(@client, uri: alert[:uri])[0]
#puts "'#{after_delete.data}'"


puts "\n\n Delete Alert_change_log generated by user by ID"
alert_cl = alert_class.get_all(@client).last
puts alert_cl[:changeLog][0]['uri']
puts alert_cl
puts "\n Change log alert to be deleted \n"
puts "Alerts by Change log ID : '#{alert_cl.data}'"
alert_cl.delete

puts "After Delete"
cl_after_delete = alert_class.find_by(@client, uri: alert_cl[:changeLog][0]['uri'])
puts "'#cl_after_delete.data}'"




